name: Delete All Workflow Runs

on:
  workflow_dispatch:

jobs:
  delete-workflows:
    runs-on: ubuntu-latest

    steps:
      - name: Delete all workflow runs across all pages
        env:
          GH_PAT: ${{ secrets.PAT_TOKEN }}  # Must be set in repo secrets
          REPO: ${{ github.repository }}
        run: |
          echo "üîÑ Starting deletion of workflow runs for $REPO..."

          PAGE=1

          while true; do
            echo "üìÑ Fetching page $PAGE..."

            RESPONSE=$(curl -s -w "%{http_code}" -H "Authorization: Bearer $GH_PAT" \
              -H "Accept: application/vnd.github+json" \
              "https://api.github.com/repos/$REPO/actions/runs?per_page=100&page=$PAGE")

            # Separate response body and status
            BODY=$(echo "$RESPONSE" | head -n -1)
            STATUS=$(echo "$RESPONSE" | tail -n 1)

            if [ "$STATUS" -ne 200 ]; then
              echo "‚ùå GitHub API returned HTTP $STATUS"
              echo "üîé Response:"
              echo "$BODY"
              exit 1
            fi

            # Validate the presence of workflow_runs
            if ! echo "$BODY" | jq -e .workflow_runs > /dev/null; then
              echo "‚ùå Could not parse workflow_runs from response. Full body below:"
              echo "$BODY"
              exit 1
            fi

            RUN_IDS=$(echo "$BODY" | jq -r '.workflow_runs[].id')

            if [ -z "$RUN_IDS" ]; then
              echo "‚úÖ No more workflow runs found. Exiting."
              break
            fi

            for RUN_ID in $RUN_IDS; do
              echo "üóëÔ∏è Deleting run ID: $RUN_ID"

              # Rate limit check
              RATE_LIMIT_RESPONSE=$(curl -s -H "Authorization: Bearer $GH_PAT" \
                -H "Accept: application/vnd.github+json" \
                https://api.github.com/rate_limit)

              REMAINING=$(echo "$RATE_LIMIT_RESPONSE" | jq -r '.rate.remaining')
              RESET_TIMESTAMP=$(echo "$RATE_LIMIT_RESPONSE" | jq -r '.rate.reset')
              NOW=$(date +%s)

              if [ "$REMAINING" -le 1 ]; then
                WAIT_TIME=$((RESET_TIMESTAMP - NOW + 5))
                echo "‚è≥ Rate limit hit. Sleeping for $WAIT_TIME seconds..."
                sleep "$WAIT_TIME"
              fi

              DELETE_RESPONSE=$(curl -s -o /dev/null -w "%{http_code}" -X DELETE \
                -H "Authorization: Bearer $GH_PAT" \
                -H "Accept: application/vnd.github+json" \
                "https://api.github.com/repos/$REPO/actions/runs/$RUN_ID")

              if [ "$DELETE_RESPONSE" != "204" ]; then
                echo "‚ö†Ô∏è Failed to delete run ID: $RUN_ID. HTTP status: $DELETE_RESPONSE"
              fi

              sleep 1
            done

            PAGE=$((PAGE + 1))
          done
